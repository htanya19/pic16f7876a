

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Oct 27 21:18:37 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F876A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.20
    17                           ; Generated 12/02/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F876A Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  008C                     	;# 
    88  008D                     	;# 
    89  008E                     	;# 
    90  0091                     	;# 
    91  0092                     	;# 
    92  0093                     	;# 
    93  0094                     	;# 
    94  0098                     	;# 
    95  0099                     	;# 
    96  009C                     	;# 
    97  009D                     	;# 
    98  009E                     	;# 
    99  009F                     	;# 
   100  010C                     	;# 
   101  010D                     	;# 
   102  010E                     	;# 
   103  010F                     	;# 
   104  018C                     	;# 
   105  018D                     	;# 
   106  0000                     	;# 
   107  0001                     	;# 
   108  0002                     	;# 
   109  0003                     	;# 
   110  0004                     	;# 
   111  0005                     	;# 
   112  0006                     	;# 
   113  0007                     	;# 
   114  000A                     	;# 
   115  000B                     	;# 
   116  000C                     	;# 
   117  000D                     	;# 
   118  000E                     	;# 
   119  000E                     	;# 
   120  000F                     	;# 
   121  0010                     	;# 
   122  0011                     	;# 
   123  0012                     	;# 
   124  0013                     	;# 
   125  0014                     	;# 
   126  0015                     	;# 
   127  0015                     	;# 
   128  0016                     	;# 
   129  0017                     	;# 
   130  0018                     	;# 
   131  0019                     	;# 
   132  001A                     	;# 
   133  001B                     	;# 
   134  001B                     	;# 
   135  001C                     	;# 
   136  001D                     	;# 
   137  001E                     	;# 
   138  001F                     	;# 
   139  0081                     	;# 
   140  0085                     	;# 
   141  0086                     	;# 
   142  0087                     	;# 
   143  008C                     	;# 
   144  008D                     	;# 
   145  008E                     	;# 
   146  0091                     	;# 
   147  0092                     	;# 
   148  0093                     	;# 
   149  0094                     	;# 
   150  0098                     	;# 
   151  0099                     	;# 
   152  009C                     	;# 
   153  009D                     	;# 
   154  009E                     	;# 
   155  009F                     	;# 
   156  010C                     	;# 
   157  010D                     	;# 
   158  010E                     	;# 
   159  010F                     	;# 
   160  018C                     	;# 
   161  018D                     	;# 
   162                           
   163                           	psect	idataCOMMON
   164  073D                     __pidataCOMMON:
   165                           
   166                           ;initializer for _n
   167  073D  3401               	retlw	1
   168  073E  3400               	retlw	0
   169                           
   170                           	psect	idataBANK0
   171  073F                     __pidataBANK0:
   172                           
   173                           ;initializer for _A
   174  073F  3401               	retlw	1
   175  0740  3400               	retlw	0
   176  0741  3403               	retlw	3
   177  0742  3400               	retlw	0
   178  0743  3402               	retlw	2
   179  0744  3400               	retlw	0
   180  0745  3406               	retlw	6
   181  0746  3400               	retlw	0
   182  0747  3404               	retlw	4
   183  0748  3400               	retlw	0
   184  0749  340C               	retlw	12
   185  074A  3400               	retlw	0
   186  074B  3408               	retlw	8
   187  074C  3400               	retlw	0
   188  074D  3409               	retlw	9
   189  074E  3400               	retlw	0
   190  0006                     _PORTB	set	6
   191  0086                     _TRISB	set	134
   192                           
   193                           	psect	cinit
   194  07DE                     start_initialization:	
   195                           ; #config settings
   196                           
   197  07DE                     __initialization:
   198                           
   199                           ; Initialize objects allocated to BANK0
   200  07DE  1383               	bcf	3,7	;select IRP bank0
   201  07DF  3030               	movlw	low (__pdataBANK0+16)
   202  07E0  00FD               	movwf	btemp+-1
   203  07E1  3007               	movlw	high __pidataBANK0
   204  07E2  00FE               	movwf	btemp
   205  07E3  303F               	movlw	low __pidataBANK0
   206  07E4  00FF               	movwf	btemp+1
   207  07E5  3020               	movlw	low __pdataBANK0
   208  07E6  0084               	movwf	4
   209  07E7  120A  118A  2753  120A  118A  	fcall	init_ram0
   210                           
   211                           ; Initialize objects allocated to COMMON
   212  07EC  120A  118A  273D  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   213  07F1  00F7               	movwf	__pdataCOMMON& (0+127)
   214  07F2  120A  118A  273E  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   215  07F7  00F8               	movwf	(__pdataCOMMON+1)& (0+127)
   216                           
   217                           ; Clear objects allocated to COMMON
   218  07F8  01F0               	clrf	__pbssCOMMON& (0+127)
   219  07F9  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   220  07FA  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   221  07FB  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   222  07FC                     end_of_initialization:	
   223                           ;End of C runtime variable initialization code
   224                           
   225  07FC                     __end_of__initialization:
   226  07FC  0183               	clrf	3
   227  07FD  120A  118A  2F62   	ljmp	_main	;jump to C main() function
   228                           
   229                           	psect	bssCOMMON
   230  0070                     __pbssCOMMON:
   231  0070                     _k:
   232  0070                     	ds	2
   233  0072                     _i:
   234  0072                     	ds	2
   235                           
   236                           	psect	dataCOMMON
   237  0077                     __pdataCOMMON:
   238  0077                     _n:
   239  0077                     	ds	2
   240                           
   241                           	psect	dataBANK0
   242  0020                     __pdataBANK0:
   243  0020                     _A:
   244  0020                     	ds	16
   245                           
   246                           	psect	inittext
   247  074F                     init_fetch0:	
   248                           ;	Called with low address in FSR and high address in W
   249                           
   250  074F  087E               	movf	btemp,w
   251  0750  008A               	movwf	10
   252  0751  087F               	movf	btemp+1,w
   253  0752  0082               	movwf	2
   254  0753                     init_ram0:	
   255                           ;Called with:
   256                           ;	high address of idata address in btemp 
   257                           ;	low address of idata address in btemp+1 
   258                           ;	low address of data in FSR
   259                           ;	high address + 1 of data in btemp-1
   260                           
   261  0753  120A  118A  274F  120A  118A  	fcall	init_fetch0
   262  0758  0080               	movwf	0
   263  0759  0A84               	incf	4,f
   264  075A  0804               	movf	4,w
   265  075B  067D               	xorwf	btemp+-1,w
   266  075C  1903               	btfsc	3,2
   267  075D  3400               	retlw	0
   268  075E  0AFF               	incf	btemp+1,f
   269  075F  1903               	btfsc	3,2
   270  0760  0AFE               	incf	btemp,f
   271  0761  2F53               	goto	init_ram0
   272                           
   273                           	psect	cstackCOMMON
   274  0074                     __pcstackCOMMON:
   275  0074                     ?_main:
   276  0074                     ??_main:	
   277                           ; 1 bytes @ 0x0
   278                           
   279                           
   280                           ; 1 bytes @ 0x0
   281  0074                     	ds	3
   282                           
   283                           	psect	maintext
   284  0762                     __pmaintext:	
   285 ;;
   286 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   287 ;;
   288 ;; *************** function _main *****************
   289 ;; Defined at:
   290 ;;		line 15 in file "Lab_4.c"
   291 ;; Parameters:    Size  Location     Type
   292 ;;		None
   293 ;; Auto vars:     Size  Location     Type
   294 ;;		None
   295 ;; Return value:  Size  Location     Type
   296 ;;                  1    wreg      void 
   297 ;; Registers used:
   298 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   299 ;; Tracked objects:
   300 ;;		On entry : B00/0
   301 ;;		On exit  : 0/0
   302 ;;		Unchanged: 0/0
   303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   304 ;;      Params:         0       0       0       0       0
   305 ;;      Locals:         0       0       0       0       0
   306 ;;      Temps:          3       0       0       0       0
   307 ;;      Totals:         3       0       0       0       0
   308 ;;Total ram usage:        3 bytes
   309 ;; This function calls:
   310 ;;		Nothing
   311 ;; This function is called by:
   312 ;;		Startup code after reset
   313 ;; This function uses a non-reentrant model
   314 ;;
   315                           
   316                           
   317                           ;psect for function _main
   318  0762                     _main:
   319  0762                     l620:	
   320                           ;incstack = 0
   321                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0]
   322                           
   323                           
   324                           ;Lab_4.c: 16:     TRISB = 0b00000000;
   325  0762  1683               	bsf	3,5	;RP0=1, select bank1
   326  0763  1303               	bcf	3,6	;RP1=0, select bank1
   327  0764  0186               	clrf	6	;volatile
   328                           
   329                           ;Lab_4.c: 17:     PORTB = 0b00000000;
   330  0765  1283               	bcf	3,5	;RP0=0, select bank0
   331  0766  1303               	bcf	3,6	;RP1=0, select bank0
   332  0767  0186               	clrf	6	;volatile
   333  0768                     l622:
   334                           
   335                           ;Lab_4.c: 19:     {;Lab_4.c: 20:         PORTB = A[i];
   336  0768  0872               	movf	_i,w
   337  0769  00F4               	movwf	??_main
   338  076A  0774               	addwf	??_main,w
   339  076B  3E20               	addlw	(low (_A| 0))& (0+255)
   340  076C  0084               	movwf	4
   341  076D  1383               	bcf	3,7	;select IRP bank0
   342  076E  0800               	movf	0,w
   343  076F  1283               	bcf	3,5	;RP0=0, select bank0
   344  0770  1303               	bcf	3,6	;RP1=0, select bank0
   345  0771  0086               	movwf	6	;volatile
   346  0772                     l624:
   347                           
   348                           ;Lab_4.c: 21:         _delay((unsigned long)((500)*(20000000/4000.0)));
   349  0772  300D               	movlw	13
   350  0773  00F6               	movwf	??_main+2
   351  0774  30AF               	movlw	175
   352  0775  00F5               	movwf	??_main+1
   353  0776  30B6               	movlw	182
   354  0777  00F4               	movwf	??_main
   355  0778                     u57:
   356  0778  0BF4               	decfsz	??_main,f
   357  0779  2F78               	goto	u57
   358  077A  0BF5               	decfsz	??_main+1,f
   359  077B  2F78               	goto	u57
   360  077C  0BF6               	decfsz	??_main+2,f
   361  077D  2F78               	goto	u57
   362  077E  0000               	nop
   363  077F                     l626:
   364                           
   365                           ;Lab_4.c: 22:         i++;
   366  077F  3001               	movlw	1
   367  0780  07F2               	addwf	_i,f
   368  0781  1803               	skipnc
   369  0782  0AF3               	incf	_i+1,f
   370  0783  3000               	movlw	0
   371  0784  07F3               	addwf	_i+1,f
   372  0785                     l628:
   373                           
   374                           ;Lab_4.c: 23:         if (i==8)
   375  0785  3008               	movlw	8
   376  0786  0672               	xorwf	_i,w
   377  0787  0473               	iorwf	_i+1,w
   378  0788  1D03               	btfss	3,2
   379  0789  2F8B               	goto	u11
   380  078A  2F8C               	goto	u10
   381  078B                     u11:
   382  078B  2F68               	goto	l622
   383  078C                     u10:
   384  078C                     l630:
   385                           
   386                           ;Lab_4.c: 24:         {;Lab_4.c: 25:             k++;
   387  078C  3001               	movlw	1
   388  078D  07F0               	addwf	_k,f
   389  078E  1803               	skipnc
   390  078F  0AF1               	incf	_k+1,f
   391  0790  3000               	movlw	0
   392  0791  07F1               	addwf	_k+1,f
   393  0792                     l632:
   394                           
   395                           ;Lab_4.c: 26:             if(k==2)
   396  0792  3002               	movlw	2
   397  0793  0670               	xorwf	_k,w
   398  0794  0471               	iorwf	_k+1,w
   399  0795  1D03               	btfss	3,2
   400  0796  2F98               	goto	u21
   401  0797  2F99               	goto	u20
   402  0798                     u21:
   403  0798  2FD8               	goto	l650
   404  0799                     u20:
   405  0799  2FC9               	goto	l22
   406  079A                     l636:
   407                           
   408                           ;Lab_4.c: 29:                 {;Lab_4.c: 30:                     PORTB = A[i];
   409  079A  0872               	movf	_i,w
   410  079B  00F4               	movwf	??_main
   411  079C  0774               	addwf	??_main,w
   412  079D  3E20               	addlw	(low (_A| 0))& (0+255)
   413  079E  0084               	movwf	4
   414  079F  1383               	bcf	3,7	;select IRP bank0
   415  07A0  0800               	movf	0,w
   416  07A1  1283               	bcf	3,5	;RP0=0, select bank0
   417  07A2  1303               	bcf	3,6	;RP1=0, select bank0
   418  07A3  0086               	movwf	6	;volatile
   419  07A4                     l638:
   420                           
   421                           ;Lab_4.c: 31:                     _delay((unsigned long)((500)*(20000000/4000.0)));
   422  07A4  300D               	movlw	13
   423  07A5  00F6               	movwf	??_main+2
   424  07A6  30AF               	movlw	175
   425  07A7  00F5               	movwf	??_main+1
   426  07A8  30B6               	movlw	182
   427  07A9  00F4               	movwf	??_main
   428  07AA                     u67:
   429  07AA  0BF4               	decfsz	??_main,f
   430  07AB  2FAA               	goto	u67
   431  07AC  0BF5               	decfsz	??_main+1,f
   432  07AD  2FAA               	goto	u67
   433  07AE  0BF6               	decfsz	??_main+2,f
   434  07AF  2FAA               	goto	u67
   435  07B0  0000               	nop
   436  07B1                     l640:
   437                           
   438                           ;Lab_4.c: 32:                     i--;
   439  07B1  3001               	movlw	1
   440  07B2  02F2               	subwf	_i,f
   441  07B3  3000               	movlw	0
   442  07B4  1C03               	skipc
   443  07B5  03F3               	decf	_i+1,f
   444  07B6  02F3               	subwf	_i+1,f
   445  07B7                     l642:
   446                           
   447                           ;Lab_4.c: 33:                     if(i==-1)
   448  07B7  0A72               	incf	_i,w
   449  07B8  1D03               	skipz
   450  07B9  2FBE               	goto	u31
   451  07BA  0A73               	incf	_i+1,w
   452  07BB  1D03               	btfss	3,2
   453  07BC  2FBE               	goto	u31
   454  07BD  2FBF               	goto	u30
   455  07BE                     u31:
   456  07BE  2FC9               	goto	l22
   457  07BF                     u30:
   458  07BF                     l644:
   459                           
   460                           ;Lab_4.c: 34:                     {;Lab_4.c: 35:                         i=8;
   461  07BF  3008               	movlw	8
   462  07C0  00F2               	movwf	_i
   463  07C1  3000               	movlw	0
   464  07C2  00F3               	movwf	_i+1
   465                           
   466                           ;Lab_4.c: 36:                         n++;
   467  07C3  3001               	movlw	1
   468  07C4  07F7               	addwf	_n,f
   469  07C5  1803               	skipnc
   470  07C6  0AF8               	incf	_n+1,f
   471  07C7  3000               	movlw	0
   472  07C8  07F8               	addwf	_n+1,f
   473  07C9                     l22:	
   474                           ;Lab_4.c: 38:                 }
   475                           
   476                           
   477                           ;Lab_4.c: 28:                 while(n<=2)
   478  07C9  3000               	movlw	0
   479  07CA  0278               	subwf	_n+1,w
   480  07CB  3003               	movlw	3
   481  07CC  1903               	skipnz
   482  07CD  0277               	subwf	_n,w
   483  07CE  1C03               	skipc
   484  07CF  2FD1               	goto	u41
   485  07D0  2FD2               	goto	u40
   486  07D1                     u41:
   487  07D1  2F9A               	goto	l636
   488  07D2                     u40:
   489  07D2                     l646:
   490                           
   491                           ;Lab_4.c: 39:                 n=1;
   492  07D2  3001               	movlw	1
   493  07D3  00F7               	movwf	_n
   494  07D4  3000               	movlw	0
   495  07D5  00F8               	movwf	_n+1
   496  07D6                     l648:
   497                           
   498                           ;Lab_4.c: 40:                 k=0;
   499  07D6  01F0               	clrf	_k
   500  07D7  01F1               	clrf	_k+1
   501  07D8                     l650:
   502                           
   503                           ;Lab_4.c: 42:             i=0;
   504  07D8  01F2               	clrf	_i
   505  07D9  01F3               	clrf	_i+1
   506  07DA  2F68               	goto	l622
   507  07DB  120A  118A  2800   	ljmp	start
   508  07DE                     __end_of_main:
   509  007E                     btemp	set	126	;btemp
   510  007E                     wtemp0	set	126
   511                           
   512                           	psect	config
   513                           
   514                           ;Config register CONFIG @ 0x2007
   515                           ;	Oscillator Selection bits
   516                           ;	FOSC = HS, HS oscillator
   517                           ;	Watchdog Timer Enable bit
   518                           ;	WDTE = OFF, WDT disabled
   519                           ;	Power-up Timer Enable bit
   520                           ;	PWRTE = OFF, PWRT disabled
   521                           ;	Brown-out Reset Enable bit
   522                           ;	BOREN = OFF, BOR disabled
   523                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   524                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   525                           ;	Data EEPROM Memory Code Protection bit
   526                           ;	CPD = OFF, Data EEPROM code protection off
   527                           ;	Flash Program Memory Write Enable bits
   528                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   529                           ;	In-Circuit Debugger Mode bit
   530                           ;	DEBUG = 0x1, unprogrammed default
   531                           ;	Flash Program Memory Code Protection bit
   532                           ;	CP = OFF, Code protection off
   533  2007                     	org	8199
   534  2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    0
    Data        18
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       9
    BANK0            80      0      16
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      10       5       20.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      3       9       1       64.3%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      19      12        0.0%
ABS                  0      0      19       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Oct 27 21:18:37 2021

                      _A 0020                        _i 0072                        _k 0070  
                      _n 0077                        pc 0002                       l22 07C9  
                     u10 078C                       u11 078B                       u20 0799  
                     u21 0798                       u30 07BF                       u31 07BE  
                     u40 07D2                       u41 07D1                       u57 0778  
                     u67 07AA                       fsr 0004                      l620 0762  
                    l630 078C                      l622 0768                      l640 07B1  
                    l632 0792                      l624 0772                      l642 07B7  
                    l650 07D8                      l626 077F                      l644 07BF  
                    l636 079A                      l628 0785                      l646 07D2  
                    l638 07A4                      l648 07D6                      fsr0 0004  
                    indf 0000                     _main 0762                     btemp 007E  
                   start 0000                    ?_main 0074                    _PORTB 0006  
                  _TRISB 0086                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07DE             __end_of_main 07DE  
                 ??_main 0074             __pdataCOMMON 0077  __end_of__initialization 07FC  
         __pcstackCOMMON 0074             __pidataBANK0 073F               __pmaintext 0762  
   end_of_initialization 07FC            __pidataCOMMON 073D      start_initialization 07DE  
             init_fetch0 074F              __pdataBANK0 0020              __pbssCOMMON 0070  
              ___latbits 0002            __size_of_main 007C                 init_ram0 0753  
