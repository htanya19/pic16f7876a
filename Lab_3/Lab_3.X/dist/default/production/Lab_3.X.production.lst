

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Oct 23 01:32:25 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F876A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    10                           	dabs	1,0x7E,2
    11  0000                     
    12                           ; Version 2.20
    13                           ; Generated 12/02/2020 GMT
    14                           ; 
    15                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F876A Definitions
    44                           ; 
    45                           ; SFR Addresses
    46  0000                     	;# 
    47  0001                     	;# 
    48  0002                     	;# 
    49  0003                     	;# 
    50  0004                     	;# 
    51  0005                     	;# 
    52  0006                     	;# 
    53  0007                     	;# 
    54  000A                     	;# 
    55  000B                     	;# 
    56  000C                     	;# 
    57  000D                     	;# 
    58  000E                     	;# 
    59  000E                     	;# 
    60  000F                     	;# 
    61  0010                     	;# 
    62  0011                     	;# 
    63  0012                     	;# 
    64  0013                     	;# 
    65  0014                     	;# 
    66  0015                     	;# 
    67  0015                     	;# 
    68  0016                     	;# 
    69  0017                     	;# 
    70  0018                     	;# 
    71  0019                     	;# 
    72  001A                     	;# 
    73  001B                     	;# 
    74  001B                     	;# 
    75  001C                     	;# 
    76  001D                     	;# 
    77  001E                     	;# 
    78  001F                     	;# 
    79  0081                     	;# 
    80  0085                     	;# 
    81  0086                     	;# 
    82  0087                     	;# 
    83  008C                     	;# 
    84  008D                     	;# 
    85  008E                     	;# 
    86  0091                     	;# 
    87  0092                     	;# 
    88  0093                     	;# 
    89  0094                     	;# 
    90  0098                     	;# 
    91  0099                     	;# 
    92  009C                     	;# 
    93  009D                     	;# 
    94  009E                     	;# 
    95  009F                     	;# 
    96  010C                     	;# 
    97  010D                     	;# 
    98  010E                     	;# 
    99  010F                     	;# 
   100  018C                     	;# 
   101  018D                     	;# 
   102  0000                     	;# 
   103  0001                     	;# 
   104  0002                     	;# 
   105  0003                     	;# 
   106  0004                     	;# 
   107  0005                     	;# 
   108  0006                     	;# 
   109  0007                     	;# 
   110  000A                     	;# 
   111  000B                     	;# 
   112  000C                     	;# 
   113  000D                     	;# 
   114  000E                     	;# 
   115  000E                     	;# 
   116  000F                     	;# 
   117  0010                     	;# 
   118  0011                     	;# 
   119  0012                     	;# 
   120  0013                     	;# 
   121  0014                     	;# 
   122  0015                     	;# 
   123  0015                     	;# 
   124  0016                     	;# 
   125  0017                     	;# 
   126  0018                     	;# 
   127  0019                     	;# 
   128  001A                     	;# 
   129  001B                     	;# 
   130  001B                     	;# 
   131  001C                     	;# 
   132  001D                     	;# 
   133  001E                     	;# 
   134  001F                     	;# 
   135  0081                     	;# 
   136  0085                     	;# 
   137  0086                     	;# 
   138  0087                     	;# 
   139  008C                     	;# 
   140  008D                     	;# 
   141  008E                     	;# 
   142  0091                     	;# 
   143  0092                     	;# 
   144  0093                     	;# 
   145  0094                     	;# 
   146  0098                     	;# 
   147  0099                     	;# 
   148  009C                     	;# 
   149  009D                     	;# 
   150  009E                     	;# 
   151  009F                     	;# 
   152  010C                     	;# 
   153  010D                     	;# 
   154  010E                     	;# 
   155  010F                     	;# 
   156  018C                     	;# 
   157  018D                     	;# 
   158                           
   159                           	psect	idataCOMMON
   160  0735                     __pidataCOMMON:
   161                           
   162                           ;initializer for _i
   163  0735  3401               	retlw	1
   164  0736  3400               	retlw	0
   165  0006                     _PORTB	set	6
   166  003C                     _RC4	set	60
   167  0087                     _TRISC	set	135
   168  0086                     _TRISB	set	134
   169                           
   170                           	psect	cinit
   171  07F0                     start_initialization:	
   172                           ; #config settings
   173                           
   174  07F0                     __initialization:
   175                           
   176                           ; Initialize objects allocated to COMMON
   177  07F0  120A  118A  2735  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   178  07F5  00F3               	movwf	__pdataCOMMON& (0+127)
   179  07F6  120A  118A  2736  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   180  07FB  00F4               	movwf	(__pdataCOMMON+1)& (0+127)
   181  07FC                     end_of_initialization:	
   182                           ;End of C runtime variable initialization code
   183                           
   184  07FC                     __end_of__initialization:
   185  07FC  0183               	clrf	3
   186  07FD  120A  118A  2F37   	ljmp	_main	;jump to C main() function
   187                           
   188                           	psect	dataCOMMON
   189  0073                     __pdataCOMMON:
   190  0073                     _i:
   191  0073                     	ds	2
   192                           
   193                           	psect	cstackCOMMON
   194  0070                     __pcstackCOMMON:
   195  0070                     ?_main:
   196  0070                     ??_main:	
   197                           ; 1 bytes @ 0x0
   198                           
   199                           
   200                           ; 1 bytes @ 0x0
   201  0070                     	ds	3
   202                           
   203                           	psect	maintext
   204  0737                     __pmaintext:	
   205 ;;
   206 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   207 ;;
   208 ;; *************** function _main *****************
   209 ;; Defined at:
   210 ;;		line 15 in file "Lab_3.c"
   211 ;; Parameters:    Size  Location     Type
   212 ;;		None
   213 ;; Auto vars:     Size  Location     Type
   214 ;;		None
   215 ;; Return value:  Size  Location     Type
   216 ;;                  1    wreg      void 
   217 ;; Registers used:
   218 ;;		wreg, status,2, status,0
   219 ;; Tracked objects:
   220 ;;		On entry : B00/0
   221 ;;		On exit  : 0/0
   222 ;;		Unchanged: 0/0
   223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   224 ;;      Params:         0       0       0       0       0
   225 ;;      Locals:         0       0       0       0       0
   226 ;;      Temps:          3       0       0       0       0
   227 ;;      Totals:         3       0       0       0       0
   228 ;;Total ram usage:        3 bytes
   229 ;; This function calls:
   230 ;;		Nothing
   231 ;; This function is called by:
   232 ;;		Startup code after reset
   233 ;; This function uses a non-reentrant model
   234 ;;
   235                           
   236                           
   237                           ;psect for function _main
   238  0737                     _main:
   239  0737                     l628:	
   240                           ;incstack = 0
   241                           ; Regs used in _main: [wreg+status,2+status,0]
   242                           
   243                           
   244                           ;Lab_3.c: 17:     TRISB = 0b00000000;
   245  0737  1683               	bsf	3,5	;RP0=1, select bank1
   246  0738  1303               	bcf	3,6	;RP1=0, select bank1
   247  0739  0186               	clrf	6	;volatile
   248  073A                     l630:
   249                           
   250                           ;Lab_3.c: 18:     TRISC = 0b11111111;
   251  073A  30FF               	movlw	255
   252  073B  0087               	movwf	7	;volatile
   253  073C                     l632:
   254                           
   255                           ;Lab_3.c: 19:     PORTB = 0b00000000;
   256  073C  1283               	bcf	3,5	;RP0=0, select bank0
   257  073D  1303               	bcf	3,6	;RP1=0, select bank0
   258  073E  0186               	clrf	6	;volatile
   259  073F                     l17:	
   260                           ;Lab_3.c: 20:     while (1)
   261                           
   262                           
   263                           ;Lab_3.c: 21:     {;Lab_3.c: 22:         PORTB = i;
   264  073F  0873               	movf	_i,w
   265  0740  0086               	movwf	6	;volatile
   266                           
   267                           ;Lab_3.c: 23:         _delay((unsigned long)((300)*(20000000/4000.0)));
   268  0741  3008               	movlw	8
   269  0742  00F2               	movwf	??_main+2
   270  0743  309D               	movlw	157
   271  0744  00F1               	movwf	??_main+1
   272  0745  3005               	movlw	5
   273  0746  00F0               	movwf	??_main
   274  0747                     u117:
   275  0747  0BF0               	decfsz	??_main,f
   276  0748  2F47               	goto	u117
   277  0749  0BF1               	decfsz	??_main+1,f
   278  074A  2F47               	goto	u117
   279  074B  0BF2               	decfsz	??_main+2,f
   280  074C  2F47               	goto	u117
   281  074D  2F4E               	nop2
   282                           
   283                           ;Lab_3.c: 24:         i=i*2;
   284  074E  1003               	clrc
   285  074F  0D73               	rlf	_i,w
   286  0750  00F3               	movwf	_i
   287  0751  0D74               	rlf	_i+1,w
   288  0752  00F4               	movwf	_i+1
   289  0753                     l634:
   290                           
   291                           ;Lab_3.c: 25:         if (i==256)
   292  0753  0374               	decf	_i+1,w
   293  0754  0473               	iorwf	_i,w
   294  0755  1D03               	btfss	3,2
   295  0756  2F58               	goto	u11
   296  0757  2F59               	goto	u10
   297  0758                     u11:
   298  0758  2F5D               	goto	l638
   299  0759                     u10:
   300  0759                     l636:
   301                           
   302                           ;Lab_3.c: 26:         {;Lab_3.c: 27:             i=1;
   303  0759  3001               	movlw	1
   304  075A  00F3               	movwf	_i
   305  075B  3000               	movlw	0
   306  075C  00F4               	movwf	_i+1
   307  075D                     l638:
   308                           
   309                           ;Lab_3.c: 29:         if(RC4==0)
   310  075D  1283               	bcf	3,5	;RP0=0, select bank0
   311  075E  1303               	bcf	3,6	;RP1=0, select bank0
   312  075F  1A07               	btfsc	7,4	;volatile
   313  0760  2F62               	goto	u21
   314  0761  2F63               	goto	u20
   315  0762                     u21:
   316  0762  2F3F               	goto	l17
   317  0763                     u20:
   318  0763                     l640:
   319                           
   320                           ;Lab_3.c: 30:         {;Lab_3.c: 31:             if(i==1)
   321  0763  0373               	decf	_i,w
   322  0764  0474               	iorwf	_i+1,w
   323  0765  1D03               	btfss	3,2
   324  0766  2F68               	goto	u31
   325  0767  2F69               	goto	u30
   326  0768                     u31:
   327  0768  2F8F               	goto	l652
   328  0769                     u30:
   329  0769                     l642:
   330                           
   331                           ;Lab_3.c: 32:             {;Lab_3.c: 33:                 i=256;
   332  0769  3000               	movlw	0
   333  076A  00F3               	movwf	_i
   334  076B  3001               	movlw	1
   335  076C  00F4               	movwf	_i+1
   336  076D  2F8F               	goto	l652
   337  076E                     l644:
   338                           
   339                           ;Lab_3.c: 36:             {;Lab_3.c: 37:                 i=i/2;
   340  076E  0874               	movf	_i+1,w
   341  076F  00F1               	movwf	??_main+1
   342  0770  0873               	movf	_i,w
   343  0771  00F0               	movwf	??_main
   344  0772  1003               	clrc
   345  0773  0CF1               	rrf	??_main+1,f
   346  0774  0CF0               	rrf	??_main,f
   347  0775  0870               	movf	??_main,w
   348  0776  00F3               	movwf	_i
   349  0777  0871               	movf	??_main+1,w
   350  0778  00F4               	movwf	_i+1
   351  0779                     l646:
   352                           
   353                           ;Lab_3.c: 38:                 PORTB = i;
   354  0779  0873               	movf	_i,w
   355  077A  0086               	movwf	6	;volatile
   356  077B                     l648:
   357                           
   358                           ;Lab_3.c: 39:                 _delay((unsigned long)((300)*(20000000/4000.0)));
   359  077B  3008               	movlw	8
   360  077C  00F2               	movwf	??_main+2
   361  077D  309D               	movlw	157
   362  077E  00F1               	movwf	??_main+1
   363  077F  3005               	movlw	5
   364  0780  00F0               	movwf	??_main
   365  0781                     u127:
   366  0781  0BF0               	decfsz	??_main,f
   367  0782  2F81               	goto	u127
   368  0783  0BF1               	decfsz	??_main+1,f
   369  0784  2F81               	goto	u127
   370  0785  0BF2               	decfsz	??_main+2,f
   371  0786  2F81               	goto	u127
   372  0787  2F88               	nop2
   373                           
   374                           ;Lab_3.c: 40:                 if (i==1)
   375  0788  0373               	decf	_i,w
   376  0789  0474               	iorwf	_i+1,w
   377  078A  1D03               	btfss	3,2
   378  078B  2F8D               	goto	u41
   379  078C  2F8E               	goto	u40
   380  078D                     u41:
   381  078D  2F8F               	goto	l652
   382  078E                     u40:
   383  078E  2F69               	goto	l642
   384  078F                     l652:
   385                           
   386                           ;Lab_3.c: 35:             while(RC4==0)
   387  078F  1283               	bcf	3,5	;RP0=0, select bank0
   388  0790  1303               	bcf	3,6	;RP1=0, select bank0
   389  0791  1E07               	btfss	7,4	;volatile
   390  0792  2F94               	goto	u51
   391  0793  2F95               	goto	u50
   392  0794                     u51:
   393  0794  2F6E               	goto	l644
   394  0795                     u50:
   395  0795  2FBA               	goto	l662
   396  0796                     l654:
   397                           
   398                           ;Lab_3.c: 46:             {;Lab_3.c: 47:                 i=i/2;
   399  0796  0874               	movf	_i+1,w
   400  0797  00F1               	movwf	??_main+1
   401  0798  0873               	movf	_i,w
   402  0799  00F0               	movwf	??_main
   403  079A  1003               	clrc
   404  079B  0CF1               	rrf	??_main+1,f
   405  079C  0CF0               	rrf	??_main,f
   406  079D  0870               	movf	??_main,w
   407  079E  00F3               	movwf	_i
   408  079F  0871               	movf	??_main+1,w
   409  07A0  00F4               	movwf	_i+1
   410  07A1                     l656:
   411                           
   412                           ;Lab_3.c: 48:                 PORTB = i;
   413  07A1  0873               	movf	_i,w
   414  07A2  0086               	movwf	6	;volatile
   415  07A3                     l658:
   416                           
   417                           ;Lab_3.c: 49:                 _delay((unsigned long)((300)*(20000000/4000.0)));
   418  07A3  3008               	movlw	8
   419  07A4  00F2               	movwf	??_main+2
   420  07A5  309D               	movlw	157
   421  07A6  00F1               	movwf	??_main+1
   422  07A7  3005               	movlw	5
   423  07A8  00F0               	movwf	??_main
   424  07A9                     u137:
   425  07A9  0BF0               	decfsz	??_main,f
   426  07AA  2FA9               	goto	u137
   427  07AB  0BF1               	decfsz	??_main+1,f
   428  07AC  2FA9               	goto	u137
   429  07AD  0BF2               	decfsz	??_main+2,f
   430  07AE  2FA9               	goto	u137
   431  07AF  2FB0               	nop2
   432                           
   433                           ;Lab_3.c: 50:                 if (i==1)
   434  07B0  0373               	decf	_i,w
   435  07B1  0474               	iorwf	_i+1,w
   436  07B2  1D03               	btfss	3,2
   437  07B3  2FB5               	goto	u61
   438  07B4  2FB6               	goto	u60
   439  07B5                     u61:
   440  07B5  2FBA               	goto	l662
   441  07B6                     u60:
   442  07B6                     l660:
   443                           
   444                           ;Lab_3.c: 51:                 {;Lab_3.c: 52:                     i=256;
   445  07B6  3000               	movlw	0
   446  07B7  00F3               	movwf	_i
   447  07B8  3001               	movlw	1
   448  07B9  00F4               	movwf	_i+1
   449  07BA                     l662:
   450                           
   451                           ;Lab_3.c: 45:             while(RC4==1)
   452  07BA  1283               	bcf	3,5	;RP0=0, select bank0
   453  07BB  1303               	bcf	3,6	;RP1=0, select bank0
   454  07BC  1A07               	btfsc	7,4	;volatile
   455  07BD  2FBF               	goto	u71
   456  07BE  2FC0               	goto	u70
   457  07BF                     u71:
   458  07BF  2F96               	goto	l654
   459  07C0                     u70:
   460  07C0                     l664:
   461                           
   462                           ;Lab_3.c: 55:             if (i==256)
   463  07C0  0374               	decf	_i+1,w
   464  07C1  0473               	iorwf	_i,w
   465  07C2  1D03               	btfss	3,2
   466  07C3  2FC5               	goto	u81
   467  07C4  2FC6               	goto	u80
   468  07C5                     u81:
   469  07C5  2FE6               	goto	l674
   470  07C6                     u80:
   471  07C6                     l666:
   472                           
   473                           ;Lab_3.c: 56:             {;Lab_3.c: 57:                 i=1;
   474  07C6  3001               	movlw	1
   475  07C7  00F3               	movwf	_i
   476  07C8  3000               	movlw	0
   477  07C9  00F4               	movwf	_i+1
   478  07CA  2FE6               	goto	l674
   479  07CB                     l668:
   480                           
   481                           ;Lab_3.c: 60:             {;Lab_3.c: 61:                 PORTB = i;
   482  07CB  0873               	movf	_i,w
   483  07CC  0086               	movwf	6	;volatile
   484                           
   485                           ;Lab_3.c: 62:                 _delay((unsigned long)((300)*(20000000/4000.0)));
   486  07CD  3008               	movlw	8
   487  07CE  00F2               	movwf	??_main+2
   488  07CF  309D               	movlw	157
   489  07D0  00F1               	movwf	??_main+1
   490  07D1  3005               	movlw	5
   491  07D2  00F0               	movwf	??_main
   492  07D3                     u147:
   493  07D3  0BF0               	decfsz	??_main,f
   494  07D4  2FD3               	goto	u147
   495  07D5  0BF1               	decfsz	??_main+1,f
   496  07D6  2FD3               	goto	u147
   497  07D7  0BF2               	decfsz	??_main+2,f
   498  07D8  2FD3               	goto	u147
   499  07D9  2FDA               	nop2
   500                           
   501                           ;Lab_3.c: 63:                 i=i*2;
   502  07DA  1003               	clrc
   503  07DB  0D73               	rlf	_i,w
   504  07DC  00F3               	movwf	_i
   505  07DD  0D74               	rlf	_i+1,w
   506  07DE  00F4               	movwf	_i+1
   507  07DF                     l670:
   508                           
   509                           ;Lab_3.c: 64:                 if (i==256)
   510  07DF  0374               	decf	_i+1,w
   511  07E0  0473               	iorwf	_i,w
   512  07E1  1D03               	btfss	3,2
   513  07E2  2FE4               	goto	u91
   514  07E3  2FE5               	goto	u90
   515  07E4                     u91:
   516  07E4  2FE6               	goto	l674
   517  07E5                     u90:
   518  07E5  2FC6               	goto	l666
   519  07E6                     l674:
   520                           
   521                           ;Lab_3.c: 59:             while(RC4==0)
   522  07E6  1283               	bcf	3,5	;RP0=0, select bank0
   523  07E7  1303               	bcf	3,6	;RP1=0, select bank0
   524  07E8  1E07               	btfss	7,4	;volatile
   525  07E9  2FEB               	goto	u101
   526  07EA  2FEC               	goto	u100
   527  07EB                     u101:
   528  07EB  2FCB               	goto	l668
   529  07EC                     u100:
   530  07EC  2F3F               	goto	l17
   531  07ED  120A  118A  2800   	ljmp	start
   532  07F0                     __end_of_main:
   533  007E                     btemp	set	126	;btemp
   534  007E                     wtemp0	set	126
   535                           
   536                           	psect	config
   537                           
   538                           ;Config register CONFIG @ 0x2007
   539                           ;	Oscillator Selection bits
   540                           ;	FOSC = HS, HS oscillator
   541                           ;	Watchdog Timer Enable bit
   542                           ;	WDTE = OFF, WDT disabled
   543                           ;	Power-up Timer Enable bit
   544                           ;	PWRTE = OFF, PWRT disabled
   545                           ;	Brown-out Reset Enable bit
   546                           ;	BOREN = OFF, BOR disabled
   547                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   548                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   549                           ;	Data EEPROM Memory Code Protection bit
   550                           ;	CPD = OFF, Data EEPROM code protection off
   551                           ;	Flash Program Memory Write Enable bits
   552                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   553                           ;	In-Circuit Debugger Mode bit
   554                           ;	DEBUG = 0x1, unprogrammed default
   555                           ;	Flash Program Memory Code Protection bit
   556                           ;	CP = OFF, Code protection off
   557  2007                     	org	8199
   558  2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       0       5        0.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      3       5       1       35.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       5      12        0.0%
ABS                  0      0       5       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Oct 23 01:32:25 2021

                      _i 0073                       l17 073F                       u10 0759  
                     u11 0758                       u20 0763                       u21 0762  
                     u30 0769                       u31 0768                       u40 078E  
                     u41 078D                       u50 0795                       u51 0794  
                     u60 07B6                       u61 07B5                       u70 07C0  
                     u71 07BF                       u80 07C6                       u81 07C5  
                     u90 07E5                       u91 07E4                      l630 073A  
                    l640 0763                      l632 073C                      l642 0769  
                    l634 0753                      l660 07B6                      l644 076E  
                    l652 078F                      l636 0759                      l628 0737  
                    l670 07DF                      l654 0796                      l662 07BA  
                    l646 0779                      l638 075D                      l664 07C0  
                    l656 07A1                      l648 077B                      l666 07C6  
                    l674 07E6                      l658 07A3                      l668 07CB  
                    _RC4 003C                      u100 07EC                      u101 07EB  
                    u117 0747                      u127 0781                      u137 07A9  
                    u147 07D3                     _main 0737                     btemp 007E  
                   start 0000                    ?_main 0070                    _PORTB 0006  
                  _TRISB 0086                    _TRISC 0087                    status 0003  
                  wtemp0 007E          __initialization 07F0             __end_of_main 07F0  
                 ??_main 0070             __pdataCOMMON 0073  __end_of__initialization 07FC  
         __pcstackCOMMON 0070               __pmaintext 0737     end_of_initialization 07FC  
          __pidataCOMMON 0735      start_initialization 07F0                ___latbits 0002  
          __size_of_main 00B9  
